require 'yaml'
require 'erb'
require 'tiny_tds'
require 'fileutils'
require 'mysql2'

y = YAML.load_file("conn_info.yml")

tmshost = "172.18.60.89"
#tmsuser = "tmscob"
tmsuser = "nhp_2024"
tmspw = y["internpw"]
tmsdb = "lidoTMS"
tmsclient = TinyTds::Client.new(:username => tmsuser,
:password => tmspw,:host => tmshost,:database => tmsdb)

#puts "ACTIVE: #{tmsclient.active?}"
#puts "------"

oaihost = "oaipmh-dev.ctsmybupmova.us-east-1.rds.amazonaws.com"
#oaiuser = "oaipmhuser"
oaiuser = "nhp_2024"
oaipw = y["internpw"]
oaidb = "oaipmh_erb"
oaiclient = Mysql2::Client.new(:host=>oaihost,:username=>oaiuser,:password=>oaipw,:database=>oaidb)

#puts "OAI ACTIVE: #{oaiclient.ping}"

#exit

#TEMPLATES
ts_lido_all = %q{
<lido:lido
xmlns:lido="http://www.lido-schema.org"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:gml="http://www.opengis.net/gml"
xsi:schemaLocation="http://www.lido-schema.org http://www.lido-schema.org/schema/v1.0/lido-v1.0.xsd">
  <lido:lidoRecID lido:source="Yale Center for British Art" lido:type="local">YCBA/lido-TMS-<%= ObjectID %></lido:lidoRecID>
  <lido:category>
    <lido:conceptID lido:type="URI">http://www.cidoc-crm.org/cidoc-crm/E22_Human-Made_Object</lido:conceptID>
    <lido:term xml:lang="eng">Human-Made Object</lido:term>
  </lido:category>
  <lido:descriptiveMetadata xml:lang="eng">
    <lido:objectClassificationWrap>
      <lido:objectWorkTypeWrap>
        <% ObjectWorkTypes.each do |o| %>
        <lido:objectWorkType>
          <% if o["AATCN"] == "YCBA" and o["ObjectNameType"] == "Genre" %><!--NOTE 2/21/24 this never happens-->
          <lido:conceptID lido:source="<%= o["AATCN"] %>" lido:type="<%= o["ObjectNameType"] %>">ycba_term_<%= o["AATID"] %></lido:conceptID>
          <% else %>
          <lido:conceptID lido:source="<%= o["AATCN"] %>" lido:type="<%= o["ObjectNameType"] %>"><%= o["AATID"] %></lido:conceptID>
          <% end %>
          <lido:term><%= o["ObjectName"] %></lido:term>
        </lido:objectWorkType>
        <% end %>
        <% if ObjectWorkTypes.empty? %>
        <lido:objectWorkType>
          <lido:conceptID lido:source="YCBA" lido:type="No ObjectWorkType for Record">999</lido:conceptID>
          <lido:term></lido:term>
        </lido:objectWorkType>
        <% end %>
      </lido:objectWorkTypeWrap>
      <lido:classificationWrap>
        <% Classifications.each do |c| %>
        <lido:classification>
          <lido:conceptID lido:source="<%= c["AATCN"] %>" lido:type="Classification"><%= c["AATID"] %></lido:conceptID>
          <lido:term><%= [c["Classification"],c["SubClassification"]].reject{ |c| c.to_s.empty? }.join(separator="-") %></lido:term>
        </lido:classification>
        <% end %>
      </lido:classificationWrap>
    </lido:objectClassificationWrap>
    <lido:objectIdentificationWrap>
      <lido:titleWrap>
        <% ObjectTitles.each do |t| %>
        <lido:titleSet lido:type="<%= t["TitleType"] %>">
          <lido:appellationValue lido:pref="<%= t["PrefAlt"] %>" xml:lang="<%= t["isoCode"] %>"><%= t["Title"] %></lido:appellationValue>
        <% if t["TitleRemark"] != "" %>
          <lido:sourceAppellation><%= t["TitleRemark"] %></lido:sourceAppellation>
        <% end %>
        </lido:titleSet>
        <% end %>
        <% if ObjectTitles.empty? %>
        <lido:titleSet> 
          <lido:appellationValue xml:lang= "<%= t["isoCode"] %>">No Title For Record</lido:appellationValue>
        </lido:titleSet>
      </lido:titleWrap>
        <% end %>
      <lido:inscriptionsWrap>
        <lido:inscriptions lido:type="Inscription">
          <lido:inscriptionTranscription><%= Inscribed %></lido:inscriptionTranscription>
        </lido:inscriptions>
        <% unless Markings.nil? %>
        <lido:inscriptions lido:type="Marks">
          <lido:inscriptionTranscription><%= Markings %></lido:inscriptionTranscription> 
        </lido:inscriptions>
        <% end %>
        <% unless Lettering.nil? %>
          <lido:inscriptions lido:type="Lettering">
            <lido:inscriptionTranscription><%= Lettering %></lido:inscriptionTranscription>
          </lido:inscriptions>
        <% end %>
        <% unless Signed.nil? %>
          <lido:inscriptions lido:type="Signature">
            <lido:inscriptionTranscription><%= Signed %></lido:inscriptionTranscription>
          </lido:inscriptions>
        <% end %> 
      </lido:inscriptionsWrap>
      <lido:repositoryWrap> 
        <lido:repositorySet lido:type="current">
          <lido:repositoryName>
            <lido:legalBodyID lido:source="ULAN" lido:type="local">500303557</lido:legalBodyID>
            <lido:legalBodyName>
              <appellationValue><%= Owners[0]["DisplayName"] %></appellationValue>
            </lido:legalBodyName>
            <lido:legalBodyWeblink>https://britishart.yale.edu</lido:legalBodyWeblink>
          </lido:repositoryName>
        <% if ObjNumType == "B" %>
          <lido:workID lido:type="inventory number"><%= ObjectNumber %></lido:workID>
        <% end %>
        <% if ObjNumType == "L" %>
          <lido:workID lido:type="object number"><%= ObjectNumber %></lido:workID>
        <% end %> 
        <% ObjectAltNums.each do |a| %>
          <lido:workID lido:type="<%= a["AltNumDescription"] %>"><%= a["Altnum"] %></lido:workID>
        <% end %>
          <lido:repositoryLocation>
            <lido:partOfPlace>
              <lido:namePlaceSet>
                <lido:appellationValue lido:label="On view or not"><%= Publoc %></lido:appellationValue>
              </lido:namePlaceSet>
            </lido:partOfPlace>
        <% if PositionHasData == "yes" %>
            <lido:partOfPlace>
              <lido:namePlaceSet>
                <lido:appellationValue lido:label="UnitPosition"><%= Cup %></lido:appellationValue>
               </lido:namePlaceSet>
            </lido:partOfPlace> 
        <% end %>
        <% if NumberHasData == "yes" %>
            <lido:partOfPlace>
              <lido:namePlaceSet>
                <lido:appellationValue lido:label="UnitNumber"><%= Cun %></lido:appellationValue>
               </lido:namePlaceSet>
            </lido:partOfPlace> 
        <% end %>
        <% if TypeHasData == "yes" %>
            <lido:partOfPlace>
              <lido:namePlaceSet>
                <lido:appellationValue lido:label="UnitType"><%= Cut %></lido:appellationValue>
               </lido:namePlaceSet>
            </lido:partOfPlace> 
        <% end %>
        <% if RoomHasData == "yes" %>
            <lido:partOfPlace>
              <lido:namePlaceSet>
                <lido:appellationValue lido:label="SubSite"><%= Cr %></lido:appellationValue>
               </lido:namePlaceSet>
            </lido:partOfPlace> 
        <% end %>
        <% if Cl == 1 %>
            <lido:partOfPlace>
              <lido:namePlaceSet>
                <lido:appellationValue lido:label="Concatenated location description"><%= LScurlocTrim %></lido:appellationValue>
              </lido:namePlaceSet>
            </lido:partOfPlace>
        <% end %>
            <lido:partOfPlace>
              <lido:namePlaceSet>
                <lido:appellationValue lido:label="Site"><%= CurSite %></lido:appellationValue>
              </lido:namePlaceSet>
              <lido:gml>
                <gml:point>
                  <gml:coordinates>41.3080060, -72.9306282</gml:coordinates>
                </gml:point>
              </lido:gml>
            </lido:partOfPlace>
          </lido:repositoryLocation>
        </lido:repositorySet>
      </lido:repositoryWrap>
        <% unless State.nil? && Edition.nil? && CatRais.nil? %>
      <lido:displayStateEditionWrap>
        <% unless State.nil? %>
          <lido:displayState><%= State %></lido:displayState>
        <% end %>
        <% unless Edition.nil? %>
          <lido:displayEdition><%= Edition %></lido:displayEdition>
        <% end %>
        <% unless CatRais.nil? %>
          <lido:sourceStateEdition><%= CatRais %></lido:sourceStateEdition>
        <% end %>
      </lido:displayStateEditionWrap>
        <% end %>
      <lido:objectMeasurementsWrap>
        <% ObjDimElem.each do |e| %>
          <lido:objectMeasurementSet>
            <lido:displayObjectMeasurements><%= e["DisplayDimensions"] %></lido:displayObjectMeasurements>
            <lido:objectMeasurements>
        <% ObjDim.each do |d| %>
        <% if d["ElementID"] == e["ElementID"] %>
              <lido:measurementsSet>
                <lido:measurementType><%= d["DimensionType"] %></lido:measurementType>
                <lido:measurementUnit><%= d["UnitLabel"] %></lido:measurementUnit>
                <lido:measurementValue><%= d["DMcm"].to_f %></lido:measurementValue>
              </lido:measurementsSet>
        <% end %>
        <% end %>
        <% if e["element"] == 'Support (PTG)' %>
              <lido:extentMeasurements></lido:extentMeasurements>
        <% else %>
              <lido:extentMeasurements><%= e["element"] %></lido:extentMeasurements>
        <% end %>
              <lido:qualifierMeasurements><%= e["Description"] %></lido:qualifierMeasurements>
            </lido:objectMeasurements>
          </lido:objectMeasurementSet>
        <% end %>
        </lido:objectMeasurementsWrap>
      </lido:objectIdentificationWrap>
      <lido:eventWrap> 
        <lido:eventSet> 
          <lido:event> 
            <lido:eventID lido:type="TMS"><%= ObjectID %></lido:eventID> 
            <lido:eventType> 
              <lido:conceptID lido:source="AAT" lido:type="local">300054713</lido:conceptID> 
              <lido:term>production</lido:term> 
            </lido:eventType> 
        <% CreatorSet.each do |c| %> 
            <lido:eventActor> 
          <% if c["creatorname"] != '' %> 
              <lido:displayActorInRole><%= c["creatorname"] %></lido:displayActorInRole> 
          <% end %> 
              <lido:actorInRole> 
                <lido:actor lido:="<%= c["constituentType"] %>"> 
                  <lido:actorID lido:source="YCBA" lido:type="local">ycba_actor_<%= c["ConstituentID"] %></lido:actorID> 
        <% ConAltNums.each do |n| %>  
            <% if n["ConstituentID"] == c["ConstituentID"] %>  
                  <lido:actorID lido:source="<% n["Description"] %>" lido:type="<% n["LidoType"] %>"><% n["Altnum"] %></lido:actorID>  
            <% end %>  
        <% end %>  
                  <lido:nameActorSet>  
        <% ConAltNames.each do |a| %>  
          <% if a["DoDn"] == c["DoDn"] %>  
            <% if a["NameTypeSpecific"] == 'LOC NAF' %>  
                    <lido:appellationValue lido:pref="<%= a["NameType"] %>" lido:label="LOC NAF"><%= a["DisplayName"] %></lido:appellationValue>  
            <% else %>  
                    <lido:appelationValue lido:pref="<%= a["NameType"] %>"><%= a["DisplayName"] %></lido:appelationValue>  
            <% end %>  
          <% end %>  
        <% end %>  
        <% ConAltNames.each do |a| %>  
        <% if a["DoDn"] == c["DoDn"] and a["NameType"] == "preferred" %>  
          <% if a["DisplayDate"] == "" %>  
                    <lido:appellationValue lido:label="Alpha Sort" lido:pref="alternate"><%= a["AlphaSort"] %></lido:appellationValue>  
                    <lido:appellationValue lido:label="Display" lido:pref="alternate"><%= a["DisplayName"] %></lido:appellationValue>  
            <% if a["Prefix"] == "" %>  
                    <lido:appellationValue lido:label="Qualified" lido:pref="alternate"><%= a["DisplayName"] %></lido:appellationValue>  
            <% else %>  
                    <lido:appellationValue lido:label="Qualified" lido:pref="alternate"><%= a["Prefix"] %> <%= a["DisplayName"] %></lido:appellationValue>  
            <% end %>  
          <% else %>  
                    <lido:appellationValue lido:label="Alpha Sort" lido:pref="alternate"><%= a["AlphaSort"] %> <%= a["DisplayDate"] %></lido:appellationValue> 
                    <lido:appellationValue lido:label="Display" lido:pref="alternate"><%= a["DisplayName"] %> <%= a["DisplayDate"] %></lido:appellationValue>  
            <% if a["Prefix"] == "" %>  
                    <lido:appellationValue lido:label="Qualified" lido:pref="alternate"><%= a["DisplayName"] %> <%= a["DisplayDate"] %></lido:appellationValue>   
            <% else %>  
                    <lido:appellationValue lido:label="Qualified" lido:pref="alternate"><%= a["Prefix"] %> <%= a["DisplayName"] %> <%= a["DisplayDate"] %></lido:appellationValue>  
            <% end %>  
          <% end %>  
                    <lido:appellationValue lido:label="Suffix" lido:pref="alternate"><%= c["Suffix"] %></lido:appellationValue>  
        <% end %>  
        <% end %>  
                  </lido:nameActorSet>  
  
        <% if c["nationality"] != '' %> 
                  <lido:nationalityActor> 
          <% ConAttributes.each do |b| %> 
          <% if b["ConstituentID"] == c["ConstituentID"] and b["thesxreftype"] != "sourceTermID" %> 
                    <lido:conceptID lido:source="<%= b["UCTS"] %>" lido:type="<%= b["thesxreftype"] %>" lido:label="<%= b["Term"] %>"><%= b["FinalST"] %></lido:conceptID> 
          <% end %> 
          <% end %> 
                    <lido:term><%= c["nationality"] %></lido:term> 
                  </lido:nationalityActor> 
        <% end %> 
<!-- The lines below is good, the line above is the issue --> 
                  <lido:vitalDatesActor> 
        <% if c["dateaccuracy"] == 'exact' %> 
                    <lido:earliestDate lido:type="birthDate"><%= c["begindate"] %></lido:earliestDate> 
                    <lido:latestDate lido:type="deathDate"><%= c["enddate"] %></lido:latestDate> 
        <% end %> 
        <% if c["dateacuracy"] == 'estimate' %> 
                    <lido:earliestDate lido:type="estimatedDate"><%= c["begindate"] %></lido:earliestDate> 
                    <lido:latestDate lido:type="estimatedDate"><%= c["enddate"] %></lido:latestDate> 
        <% end %> 
                  </lido:vitalDatesActor> 
                  <lido:genderActor><%= c["gender"] %></lido:genderActor> 
                </lido:actor> 
                <lido:roleActor> 
                  <lido:conceptID lido:source="AAT" lido:type="Object related role">300025103</lido:conceptID> 
                  <lido:term>Artist</lido:term> 
                </lido:roleActor> 
        <% ConLifeRole.each do |r| %> 
                <lido:roleActor> 
        <% if r["conID"] == c["ConstituentID"] %> 
                  <lido:conceptID lido:source="<%= r["UCTS"] %>"lido:type="<%= r["thesxreftype"] %>"><%= r["FinalST"] %></lido:conceptID> 
                  <lido:term><%= r["Term"] %></lido:term> 
        <% end %> 
                </lido:roleActor> 
        <% end %> 
                <lido:attributionQualifierActor><%= c["Prefix"] %></lido:attributionQualifierActor> 
        <% end %> 
              </lido:actorInRole> 
            </lido:eventActor> 
<!-- line 398-400 pretty sure not neccesary for writing a line of code --> 
        <% Objculture.each do |l| %> 
        <% if Objculture.first %> 
            <lido:culture> 
        <% end %> 
              <lido:conceptID lido:source="<%= l["AATCN"] %>" lido:type="local"><%= l["AATID"] %></lido:conceptID> 
              <lido:term><%= l["Culture"] %></lido:term> 
        <% if Objculture.last %> 
            </lido:culture> 
        <% end %> 
        <% end %> 
        <% if Dated != '' %> 
            <lido:eventDate> 
              <lido:displayDate><%= Dated %></lido:displayDate> 
              <lido:date> 
                <lido:earliestDate><% if DateBegin != '' %><%= DateBegin %><% end %></lido:earliestDate> 
                <lido:latestDate><% if DateEnd != '' %><%= DateEnd %><% end %></lido:latestDate> 
              </lido:date> 
            </lido:eventDate> 
        <% end %> 
            <lido:periodName> 
              <lido:conceptID lido:type="local" lido:source="<%= Objperiod[0]["AATCN"] %>"><%= Objperiod[0]["AATID"] %></lido:conceptID> 
              <lido:term><%= Objperiod[0]["Period"] %></lido:term> 
            </lido:periodName> 
            <lido:eventMaterialsTech> 
              <lido:displayMaterial><%= MediumPS %></lido:displayMaterial> 
              <lido:materialsTech> 
        <% AATMediumTerms.each do |m| %> 
                <lido:termMaterialTech> 
                  <lido:conceptID lido:type = "<%= m["colThesxrefType"] %>" lido:source = "<%= m["UCTS"] %>"><%= m["FinalST"] %></lido:conceptID> 
                  <lido:term><%= m["term"] %></lido:term> 
                </lido:termMaterialTech> 
        <% end %>         
              </lido:materialsTech> 
            </lido:eventMaterialsTech> 
          </lido:event> 
        </lido:eventSet> 

        <% ExhVenues.each do |v| %> 
        <lido:eventSet> 
<!-- The line below relates to ExhVenues not showing up in lido_8.txt --> 
          <lido:displayEvent><%= v["exhVen"] %></lido:displayEvent> 
           <lido:event> 
            <lido:eventID lido:type = "local"><%= v["exhibitionID"] %></lido:eventID> 
        <% ExhTextEntries.each do |t| %> 
        <% if v["exhibitionID"] == t["ExhibitionID"] %> 
          <% if t["TextType"] == 'LUX exhibition' %> 
            <lido:eventID lido:type = "LUX exhibition"><%= t["TextEntry"] %></lido:eventID> 
          <% end %> 
          <% if t["TextType"] == 'ExhibitionURL' %> 
            <lido:eventID lido:type = "ExhibitionURL"><%= t["TextEntry"] %></lido:eventID> 
          <% end %> 
        <% end %> 
        <% end %> 
        <lido:eventType>
          <lido:conceptID lido:type = "ATT">300054766</lido:conceptID>
          <lido:term>exhibition</lido:term>
        </lido:eventType>
        <lido:eventName>
          <lido:appellationValue><%= v["ExhTitle"] %></lido:appellationValue>
          <lido:sourceAppellationValue>Yale Center for British Art</lido:sourceAppellationValue>
        </lido:eventName>

        <% end %> 

  
        </lido:eventSet> 
      </lido:eventWrap> 
  </lido:descriptiveMetadata>
</lido:lido>
}

FileUtils.rm_rf('records')
FileUtils.mkdir('records')

#ITERATING THROUGH OBJECTS
objects_main_query = tmsclient.execute("SELECT top 10 * FROM [Coboat_ObjectsMainQuery]").each
#objects_main_query = tmsclient.execute("SELECT top 10 * FROM [Coboat_ObjectsMainQuery] where ObjectID = 6236").each #for displayStateEditionWrap 
#objects_main_query = tmsclient.execute("SELECT top 10 * FROM [Coboat_ObjectsMainQuery] where ObjectID = 515").each #for ObjectMeasurementWrap
puts "Number of Objects: #{objects_main_query.size}"
objects_main_query.each { |r|
#  m_lidoRecID = ERB.new(t_lidoRecID, trim_mode: "%<>")
  ObjectID = r["ObjectID"]
  Inscribed = r["Inscribed"]
  Markings = r["Markings"]
  Lettering = r["Lettering"]
  Signed = r["Signed"]
  ObjNumType = r["ObjNumType"]
  ObjectNumber = r["ObjectNumber"]
  State = r["State"]
  Edition = r["Edition"]
  CatRais = r["CatRais"]
  Dated = r["Dated"] 
  DateBegin = r["DateBegin"] 
  DateEnd = r["DateEnd"] 
  MediumPS = r["MediumPS"] 


  objectNTJ = tmsclient.execute("SELECT * FROM [Coboat_ObjectNTJ] where ID ="+ObjectID.to_s).each
#  m_objectWorkType = ERB.new(t_objectWorkType, trim_mode: "%<>")
  ObjectWorkTypes = Array.new
  objectNTJ.each { |r1|
    ObjectWorkTypes << r1
  }

  classifications = tmsclient.execute("SELECT * from [Coboat_Classifications] where ObjectID ="+ObjectID.to_s).each
#  m_classificationsWrap = ERB.new(t_classificationsWrap, trim_mode: "%<>")
  Classifications = Array.new
  classifications.each { |r1|
    Classifications << r1
  }

  objectTitles = tmsclient.execute("SELECT * from [Coboat_Objtitles]
  where ObjectID ="+ObjectID.to_s).each
#  m_titleWrap = ERB.new(t_titleWrap, trim_mode: "%<>")
  ObjectTitles = Array.new
  objectTitles.each { |r1|
    ObjectTitles << r1
  }

  owners = tmsclient.execute("SELECT * from [Coboat_Owner] where ID ="+ObjectID.to_s).each
  Owners = Array.new
  owners.each { |r1|
    Owners << r1
  }

  objectAltNums = tmsclient.execute("SELECT * from [Coboat_ObjAltNums] where ID ="+ObjectID.to_s).each
  ObjectAltNums = Array.new
  objectAltNums.each { |r1|
    ObjectAltNums << r1
  }
  
  locations = tmsclient.execute("SELECT * from [Coboat_Locations] where ID ="+ObjectID.to_s).each
  Locations = Array.new
  locations.each { |r1|
    Locations << r1
    Publoc = r1["Publoc"]
    PositionHasData = r1["positionHasData"]
    Cup = r1["cup"]
    NumberHasData = r1["numberHasData"]
    Cun = r1["cun"]
    TypeHasData = r1["typeHasData"]
    Cut = r1["cut"]
    RoomHasData = r1["roomHasData"]
    Cr = r1["cr"]
    Cl = r1["cl"]
    LScurlocTrim = r1["LScurlocTrim"]
    CurSite = r1["CurSite"]
  }

  objectDimElem = tmsclient.execute("SELECT * from [Coboat_ObjDimElem] where ID ="+ObjectID.to_s).each
  ObjDimElem = Array.new
  objectDimElem.each { |r1|
    ObjDimElem << r1
  }

  objectDim = tmsclient.execute("SELECT * from [Coboat_ObjDim] where ID ="+ObjectID.to_s).each
  ObjDim = Array.new
  objectDim.each { |r1|
    ObjDim << r1
  }

  creatorSet = tmsclient.execute("SELECT * from [Coboat_CreatorSet] where ID ="+ObjectID.to_s).each 
  CreatorSet = Array.new 
  creatorSet.each { |r1| 
    CreatorSet << r1 
  } 

  conAltNums = tmsclient.execute("SELECT * from [Coboat_ConAltNums] where ID ="+ObjectID.to_s).each 
  ConAltNums = Array.new 
  conAltNums.each { |r1| 
    ConAltNums << r1 
  } 

  conAltNames = tmsclient.execute("SELECT * from [Coboat_ConAltNames] where ID ="+ObjectID.to_s).each 
  ConAltNames = Array.new 
  conAltNames.each { |r1| 
    ConAltNames << r1 
  } 
 
  conAttributes = tmsclient.execute("SELECT * from [Coboat_ConAttributes] where ID ="+ObjectID.to_s).each 
  ConAttributes = Array.new 
  conAttributes.each { |r1| 
    ConAttributes << r1 
  } 

  conLifeRole = tmsclient.execute("SELECT * from [Coboat_ConLifeRole] where ID ="+ObjectID.to_s).each 
  ConLifeRole = Array.new 
  conLifeRole.each { |r1| 
    ConLifeRole << r1 
  } 

  objculture = tmsclient.execute("SELECT * from [Coboat_Objculture] where ID ="+ObjectID.to_s).each 
  Objculture = Array.new 
  objculture.each { |r1| 
    Objculture << r1 
  }   

  objperiod = tmsclient.execute("SELECT * from [Coboat_Objperiod] where ID ="+ObjectID.to_s).each 
  Objperiod = Array.new 
  objperiod.each { |r1| 
    Objperiod << r1 
    AATCN = r1["AATCN"] 
    AATID = r1["AATID"] 
    Period = r1["Period"] 
  } 

  aatMediumTerms = tmsclient.execute("SELECT * from [Coboat_AATMediumTerms] where ID ="+ObjectID.to_s).each 
  AATMediumTerms = Array.new 
  aatMediumTerms.each { |r1| 
    AATMediumTerms << r1 
  }   

  exhVenues = tmsclient.execute("SELECT * from [Coboat_ExhVenues] where ObjectID ="+ObjectID.to_s).each 
  ExhVenues = Array.new 
  exhVenues.each { |r1| 
    ExhVenues << r1 
  } 
  
  exhTextEntries = tmsclient.execute("SELECT * from [Coboat_ExhTextEntries] where ID ="+ObjectID.to_s).each 
  ExhTextEntries = Array.new 
  exhTextEntries.each { |r1| 
    ExhTextEntries << r1 
  } 


#  m_inscriptionWrap = ERB.new(t_inscriptionsWrap, trim_mode: "%<>")
  
  m_lido_all = ERB.new(ts_lido_all, trim_mode: "%<>")


  #do remove this in favor of concac xml string and pushing to file and/or mysql
  open('records/lido_'+ObjectID.to_s+'.txt', 'a') { |f|
    f.puts m_lido_all.result.lines.reject{|line| line =~ /^[[:space:]]*$/}
  }

  #sourcepath = "/Users/ermadmix/Documents/RubymineProjects/TMSSerialization/records/lido_"
  #insertquery = "INSERT INTO metadata_record (local_identifier,timestamp,xml) VALUES (\""+ObjectID.to_s+"\",now(),LOAD_FILE(\""+sourcepath+ObjectID.to_s+".txt\"))"
  #puts insertquery
  #oaiclient.query(insertquery)

  xml = ""
  xml.concat(m_lido_all.result.lines.reject{|line| line =~ /^[[:space:]]*$/}.to_s)
  #puts "--"
  #puts xml

}
#puts objects_main_query[0]["ObjectID"]

tmsclient.close
oaiclient.close
